// Incluye la librería Servo
#include <Servo.h>. 
// Defines Tirg y Echo del Sensor utrasonico
const int trigPin = 10;
const int echoPin = 11;
// Variables para la duración y distancia
long duration;
int distance;
Servo myServo; // Crea una variable servo
void setup() {
  pinMode(trigPin, OUTPUT); // Establece el trigPin como un Output
  pinMode(echoPin, INPUT); // Establece el echoPin como un Input
  Serial.begin(9600);
  myServo.attach(12); // Defines los pines del servo
}
void loop() {
  // Rotacion del servo de  15 a 165 grados
  for(int i=15;i<=165;i++){  
  myServo.write(i);
  delay(30);
  distance = calculateDistance();// Calcular distancia
  
  Serial.print(i); // Envía el grado actual al puerto serie

  Serial.print(","); // Envía el carácter adicional justo al lado del valor anterior necesario más adelante en el IDE de procesamiento para la indexación

  Serial.print(distance); // Envía el valor de la distancia al puerto serie

  Serial.print("."); // Envía el carácter adicional justo al lado del valor anterior necesario más adelante en el IDE de procesamiento para la indexación

  }
  // repetición
  for(int i=165;i>15;i--){  
  myServo.write(i);
  delay(30);
  distance = calculateDistance();
  Serial.print(i);
  Serial.print(",");
  Serial.print(distance);
  Serial.print(".");
  }
}
// calcular distancia
int calculateDistance(){ 
  
  digitalWrite(trigPin, LOW); 
  delayMicroseconds(2);
  // Establece el trigPin en estado ALTO durante 10 microsegundos

  digitalWrite(trigPin, HIGH); 
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH); // Leer el echoPin, retorna la onda ultrasónica
  distance= duration*0.034/2;
  return distance;
}


